#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Notion –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Å–≤–æ–π—Å—Ç–≤
"""

import os
import requests
from datetime import datetime

def create_notion_task_fixed(text: str, username: str, chat_title: str = None) -> bool:
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–¥–∞—á—É –≤ Notion —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Å–≤–æ–π—Å—Ç–≤"""
    notion_token = os.getenv("NOTION_TOKEN")
    database_id = os.getenv("NOTION_DATABASE_ID")
    
    if not notion_token or not database_id:
        print("Notion credentials not configured")
        return False
    
    headers = {
        "Authorization": f"Bearer {notion_token}",
        "Content-Type": "application/json",
        "Notion-Version": "2022-06-28"
    }
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–¥–∞—á–∏
    title = text[:100] + "..." if len(text) > 100 else text
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    properties = {
        "Task name": {  # –ò—Å–ø–æ–ª—å–∑—É–µ–º "Task name" –≤–º–µ—Å—Ç–æ "Name"
            "title": [
                {
                    "text": {
                        "content": title
                    }
                }
            ]
        },
        "Status": {  # –ò—Å–ø–æ–ª—å–∑—É–µ–º "Status"
            "status": {
                "name": "Not started"
            }
        },
        "Task type": {  # –ò—Å–ø–æ–ª—å–∑—É–µ–º "Task type" –¥–ª—è —Ç–µ–≥–æ–≤
            "multi_select": [
                {"name": "Telegram"},
                {"name": username}
            ]
        }
    }
    
    # –°–æ–∑–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    children = [
        {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
                "rich_text": [
                    {
                        "type": "text",
                        "text": {
                            "content": f"–ò—Å—Ç–æ—á–Ω–∏–∫: Telegram\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n–ß–∞—Ç: {chat_title or '–õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'}\n\n{text}"
                        }
                    }
                ]
            }
        }
    ]
    
    data = {
        "parent": {"database_id": database_id},
        "properties": properties,
        "children": children
    }
    
    try:
        response = requests.post(
            "https://api.notion.com/v1/pages",
            headers=headers,
            json=data
        )
        
        if response.status_code == 200:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞ –≤ Notion: {title}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏: {response.status_code} - {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {e}")
        return False

def main():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Å–≤–æ–π—Å—Ç–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Notion –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    notion_token = os.getenv('NOTION_TOKEN')
    database_id = os.getenv('NOTION_DATABASE_ID')
    
    print(f"üîë NOTION_TOKEN: {notion_token[:10] if notion_token else '–ù–ï –ù–ê–°–¢–†–û–ï–ù'}...")
    print(f"üìä NOTION_DATABASE_ID: {database_id}")
    print()
    
    if not notion_token:
        print("‚ùå NOTION_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return
    
    if not database_id:
        print("‚ùå NOTION_DATABASE_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
    test_text = f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç Notion - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
    test_username = "Fixed Test User"
    
    print(f"üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É:")
    print(f"   –¢–µ–∫—Å—Ç: {test_text}")
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_username}")
    print(f"   –°–≤–æ–π—Å—Ç–≤–∞: Task name, Status, Task type")
    print()
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É
        success = create_notion_task_fixed(test_text, test_username, "Fixed Test")
        
        if success:
            print("‚úÖ –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –≤ Notion!")
            print(f"üîó –û—Ç–∫—Ä–æ–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: https://notion.so/{database_id}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –≤ Notion")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {e}")

if __name__ == "__main__":
    main()
