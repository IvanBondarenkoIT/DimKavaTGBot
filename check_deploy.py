#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –¥–µ–ø–ª–æ—è –±–æ—Ç–∞
"""

import requests
import sys
import os
from dotenv import load_dotenv

def check_deploy():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –¥–µ–ø–ª–æ—è"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    # –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    webhook_url = os.getenv('WEBHOOK_URL')
    
    if not webhook_url:
        print("üåê –í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://dimkava-bot.railway.app):")
        webhook_url = input().strip()
        
        if not webhook_url.startswith('http'):
            webhook_url = f"https://{webhook_url}"
    
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è—é –¥–µ–ø–ª–æ–π: {webhook_url}")
    print("-" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è—é –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
        response = requests.get(webhook_url, timeout=10)
        
        if response.status_code == 200:
            print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:100]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ {webhook_url}")
        print(f"   –û—à–∏–±–∫–∞: {e}")
        return False
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ–±—Ö—É–∫
        print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è—é –≤–µ–±—Ö—É–∫...")
        webhook_response = requests.get(f"{webhook_url}/set_webhook", timeout=10)
        
        if webhook_response.status_code == 200:
            print("‚úÖ –í–µ–±—Ö—É–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"   –û—Ç–≤–µ—Ç: {webhook_response.text}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±—Ö—É–∫–∞: {webhook_response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ–±—Ö—É–∫")
        print(f"   –û—à–∏–±–∫–∞: {e}")
        return False
    
    print("\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("\nüì± –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ:")
    print("   1. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É")
    print("   2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –æ–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å")
    print("   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –≤ Railway")
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ DimKavaTGBot - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ø–ª–æ—è")
    print("=" * 50)
    
    success = check_deploy()
    
    if success:
        print("\n‚úÖ –î–µ–ø–ª–æ–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        sys.exit(0)
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–µ–ø–ª–æ–µ–º!")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Railway –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        sys.exit(1)

if __name__ == "__main__":
    main()
