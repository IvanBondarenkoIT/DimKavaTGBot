#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Notion
"""

import os
import requests
from dotenv import load_dotenv

def main():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Notion"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Notion")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    notion_token = os.getenv('NOTION_TOKEN')
    database_id = os.getenv('NOTION_DATABASE_ID')
    
    if not notion_token:
        print("‚ùå NOTION_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return
    
    if not database_id:
        print("‚ùå NOTION_DATABASE_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return
    
    headers = {
        "Authorization": f"Bearer {notion_token}",
        "Content-Type": "application/json",
        "Notion-Version": "2022-06-28"
    }
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    url = f"https://api.notion.com/v1/databases/{database_id}"
    
    try:
        print(f"üîó –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {database_id}")
        response = requests.get(url, headers=headers, timeout=10)
        
        if response.status_code == 200:
            db_info = response.json()
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞!")
            print(f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: {db_info.get('title', [{}])[0].get('text', {}).get('content', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
            print()
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞
            properties = db_info.get('properties', {})
            print("üîß –°–≤–æ–π—Å—Ç–≤–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
            print("-" * 30)
            
            for prop_name, prop_info in properties.items():
                prop_type = prop_info.get('type', 'unknown')
                print(f"üìã {prop_name} ({prop_type})")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è title
                if prop_type == 'title':
                    print(f"   ‚úÖ –≠—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏")
                elif prop_type == 'status':
                    print(f"   ‚úÖ –≠—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞")
                elif prop_type == 'multi_select':
                    print(f"   ‚úÖ –≠—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Ç–µ–≥–æ–≤")
            
            print()
            print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            
            # –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
            title_props = [name for name, info in properties.items() if info.get('type') == 'title']
            status_props = [name for name, info in properties.items() if info.get('type') == 'status']
            
            if title_props:
                print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '{title_props[0]}' –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏")
            else:
                print("‚ùå –ù–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ —Ç–∏–ø–∞ 'title' –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏")
                print("   –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ —Ç–∏–ø–∞ 'Title' –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            
            if status_props:
                print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '{status_props[0]}' –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞")
            else:
                print("‚ÑπÔ∏è  –ù–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ —Ç–∏–ø–∞ 'status' (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
